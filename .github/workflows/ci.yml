name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # -----------------
      # Backend Steps
      # -----------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install backend dependencies
        run: pip install -r backend/requirements.txt

      - name: Run backend linters
        run: |
          pip install black isort flake8
          black --check .
          isort --check-only .
          flake8 backend/
        continue-on-error: true

      - name: Run backend tests
        run: pytest backend/

      # -----------------
      # Frontend Steps
      # -----------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend linter
        working-directory: ./frontend
        run: npm run lint
        continue-on-error: true

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test

  build-docker-images:
    runs-on: ubuntu-latest
    needs: test-and-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: false
          tags: audioscribe-backend:ci

      - name: Build frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          push: false
          tags: audioscribe-frontend:ci